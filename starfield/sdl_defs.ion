@foreign
struct SDL_Rect {
    x: int;
    y: int;
    w: int;
    h: int;
}

@foreign
struct SDL_PixelFormat {
    format: uint32;
    palette: void*; // SDL_Palette
    BitsPerPixel: uint8;
    BytesPerPixel: uint8;
    padding: uint8[2];
    Rmask: uint32;
    Gmask: uint32;
    Bmask: uint32;
    Amask: uint32;
    Rloss: uint8;
    Gloss: uint8;
    Bloss: uint8;
    Aloss: uint8;
    Rshift: uint8;
    Gshift: uint8;
    Bshift: uint8;
    Ashift: uint8;
    refcount: int32;
    next: SDL_PixelFormat*;
}

@foreign
struct SDL_Surface {
    flags: uint32;
    format: SDL_PixelFormat*;
    w, h: int;
    pitch: int;
    pixels: void*;
    userdata: void*;
    locked: int;
    lock_data: void*;
    clip_rect: SDL_Rect;
    map: void*; // SDL_BlitMap*;
    refcount: int;
}

@foreign
struct SDL_Renderer;

@foreign
var SDL_PIXELFORMAT_RGB888: uint32;

@foreign
func SDL_GetWindowSurface(window: SDL_Window*): SDL_Surface*;

@foreign
func SDL_UpdateWindowSurface(window: SDL_Window*);

@foreign
func SDL_CreateSoftwareRenderer(surface: SDL_Surface*): SDL_Renderer*;

@foreign
func SDL_GetPixelFormatName(format: uint32): char const*;

@foreign
func SDL_RenderClear(renderer: SDL_Renderer*): int32;

@foreign
func SDL_RenderPresent(renderer: SDL_Renderer*): int32;
