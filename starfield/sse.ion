
#foreign(header = "<xmmintrin.h>")
#foreign(header = "<emmintrin.h>")

@foreign
func _MM_SET_FLUSH_ZERO_MODE(mask: uint32);

@foreign
var _MM_FLUSH_ZERO_ON: uint32;

@foreign("__m128")
struct float4 {
    m128_f32: float[4];
}

@foreign("__m128")
struct int4 {
    m128_i32: int[4];
}

@foreign("__m128")
struct m128 {
    m128_i32: int[4];
}

//
// floats

@foreign("_mm_add_ps")
func add4(a: float4, b: float4): float4;

@foreign("_mm_sub_ps")
func sub4(a: float4, b: float4): float4;

@foreign("_mm_mul_ps")
func mul4(a: float4, b: float4): float4;

@foreign("_mm_div_ps")
func div4(a: float4, b: float4): float4;

@foreign("_mm_load_ps")
func load4(p: float const*): float4;

@foreign("_mm_store_ps")
func store4(p: float const*, a: float4);

@foreign("_mm_set1_ps")
func set4(p: float): float4;

@foreign("_mm_fmadd_ps")
func fma4(a: float4, b: float4, c: float4): float4;

@foreign("_mm_and_ps")
func and4(a: float4, b: float4): float4;

@foreign("_mm_or_ps")
func or4(a: float4, b: float4): float4;

@foreign("_mm_blend_ps")
func blend4(a: float4, b: float4, c: int): float4;

@foreign("_mm_blendv_ps")
func blendv4(a: float4, b: float4, c: m128): float4;

@foreign("_mm_broadcastss_ps")
func broadcastss4(a: float4): float4;

//
// 32 bit ints

@foreign("_mm_add_epi32")
func add4i(a: int4, b: int4): int4;

@foreign("_mm_sub_epi32")
func sub4i(a: int4, b: int4): int4;

@foreign("_mm_mul_epi32")
func mul4i(a: int4, b: int4): int4;

@foreign("_mm_div_epi32")
func div4i(a: int4, b: int4): int4;

@foreign("_mm_load_epi32")
func load4i(p: int const*): int4;

@foreign("_mm_store_epi32")
func store4i(p: int const*, a: int4);

@foreign("_mm_set1_epi32")
func set4i(p: int): int4;

@foreign("_mm_and_epi32")
func and4i(a: float4, b: float4): float4;

@foreign("_mm_or_epi32")
func or4i(a: float4, b: float4): float4;

//
//

func lerp4(a: float4, b: float4, t: float): float4 {
    return fma4(sub4(b, a), set4(t), a);
}